{"ast":null,"code":"var _jsxFileName = \"C:\\\\sidd\\\\VectorShift_ASSESSMENT\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\Hubspot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button } from '@mui/material';\nimport axios from 'axios';\nimport { CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hubspot = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`${process.env.REACT_APP_API_KEY}/integrations/hubspot/authorize`, formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      const newWindow = window.open(authURL, 'Hubspot Authorization', 'width=600, height=600');\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`${process.env.REACT_APP_API_KEY}/integrations/hubspot/credentials`, formData);\n      const credentials = response.data;\n      console.log(credentials);\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: 'Hubspot'\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n  useEffect(() => {\n    setIsConnected(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials ? true : false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: [\"Parameters\", /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: isConnected ? () => {} : handleConnectClick,\n        color: isConnected ? 'success' : 'primary',\n        disabled: isConnecting,\n        style: {\n          pointerEvents: isConnected ? 'none' : 'auto',\n          cursor: isConnected ? 'default' : 'pointer',\n          opacity: isConnected ? 1 : undefined\n        },\n        children: isConnected ? 'Hubspot Connected' : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this) : 'Connect to Hubspot'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Hubspot, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = Hubspot;\nexport default Hubspot;\nvar _c;\n$RefreshReg$(_c, \"Hubspot\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","axios","CircularProgress","jsxDEV","_jsxDEV","Hubspot","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","process","env","REACT_APP_API_KEY","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","credentials","console","log","prev","type","_e$response2","_e$response2$data","sx","mt","children","display","alignItems","justifyContent","variant","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/sidd/VectorShift_ASSESSMENT/integrations_technical_assessment/frontend/src/integrations/Hubspot.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Button } from '@mui/material';\nimport axios from 'axios';\nimport { CircularProgress } from '@mui/material';\n\nconst Hubspot = ({ user, org, integrationParams, setIntegrationParams }) => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_KEY}/integrations/hubspot/authorize`,\n        formData\n      );\n      const authURL = response?.data;\n\n      const newWindow = window.open(\n        authURL,\n        'Hubspot Authorization',\n        'width=600, height=600'\n      );\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if (newWindow?.closed !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      setIsConnecting(false);\n      alert(e?.response?.data?.detail);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_KEY}/integrations/hubspot/credentials`,\n        formData\n      );\n      const credentials = response.data;\n      console.log(credentials);\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams((prev) => ({\n          ...prev,\n          credentials: credentials,\n          type: 'Hubspot',\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      setIsConnecting(false);\n      alert(e?.response?.data?.detail);\n    }\n  };\n\n  useEffect(() => {\n    setIsConnected(integrationParams?.credentials ? true : false);\n  }, []);\n  return (\n    <Box sx={{ mt: 2 }}>\n      Parameters\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        sx={{ mt: 2 }}\n      >\n        <Button\n          variant=\"contained\"\n          onClick={isConnected ? () => {} : handleConnectClick}\n          color={isConnected ? 'success' : 'primary'}\n          disabled={isConnecting}\n          style={{\n            pointerEvents: isConnected ? 'none' : 'auto',\n            cursor: isConnected ? 'default' : 'pointer',\n            opacity: isConnected ? 1 : undefined,\n          }}\n        >\n          {isConnected ? (\n            'Hubspot Connected'\n          ) : isConnecting ? (\n            <CircularProgress size={20} />\n          ) : (\n            'Connect to Hubspot'\n          )}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Hubspot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}